@model RetroLogger5000.Data.Models.Game

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
	<h4>Game</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Platform, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EnumDropDownListFor(model => model.Platform, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Platform, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.ReleaseYear, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.IsBeaten, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsBeaten)
				@Html.ValidationMessageFor(model => model.IsBeaten, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsClean, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsClean)
				@Html.ValidationMessageFor(model => model.IsClean, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsTested, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsTested)
				@Html.ValidationMessageFor(model => model.IsTested, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsComplete, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsComplete)
				@Html.ValidationMessageFor(model => model.IsComplete, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsDuplicate, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsDuplicate)
				@Html.ValidationMessageFor(model => model.IsDuplicate, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.OnWishList, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.OnWishList)
				@Html.ValidationMessageFor(model => model.OnWishList, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IsVirtual, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<div class="checkbox">
				@Html.EditorFor(model => model.IsVirtual)
				@Html.ValidationMessageFor(model => model.IsVirtual, "", new { @class = "text-danger" })
			</div>
		</div>
	</div>
	<div class="form-group">
		<div class="col-md-offset-2 col-md-10">
			<input type="submit" value="Create" class="btn btn-default" />
		</div>
	</div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
